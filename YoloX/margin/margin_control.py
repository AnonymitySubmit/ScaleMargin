import os
import math
import matplotlib
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# from margin_train import yoloxdstre
from eval_voc_scales_v1 import eval_voc_scale_v1
# from eval_voc_scales_v2 import eval_voc_scale_v2

matplotlib.use('Agg')


def visualize_margin_curve(data_x, data_y, data_label, title, x_label, y_label, x_range, y_range, save_path, show_point=False):
    # setting up font
    font = {'family' : 'Times New Roman', 'size' : 12}
    plt.rc('font', **font)
    
    color11 = "#FFFF00" # 黄色
    color12 = "#ffc34e" # 向日黄
    color13 = "#808000" # 深黄色
    color14 = "#FFE4C4" # 橘黄色
    color15 = "#B8860B" # 暗金色
    
    color41 = "#FF0000" # 红色
    color42 = "#800000" # 深红色
    color43 = "#FF00FF" # 品红色
    color44 = "#800080" # 深品红
    
    color51 = "#00FF00" # 绿色
    color52 = "#038355" # 孔雀绿
    color53 = "#008000" # 深绿色
    color54 = "#008080" # 深青色

    color61 = "#0000FF" # 蓝色
    color62 = "#7FFFD4" # 宝石蓝
    color63 = "#F0FFFF" # 天蓝色
    color64 = "#F0F8FF" # 爱丽丝蓝

    color_list = [color15, color41, color51, color61]
    
    # setting up background & lines
    sns.set_style("whitegrid") # 设置背景样式
    for i in range(len(data_y)):
        sns.lineplot(x=data_x, y=data_y[i], color=color_list[i], linewidth=0.5, marker="o", markersize=1, markeredgecolor="white", markeredgewidth=1.5, label=data_label[i])
    
        # annotate exact data on the line
        if show_point:
            for j in range(len(data_x)):
                if j % 2 == 0: coor = (0, 14.5)
                if j % 2 == 1: coor = (0, -14.5)
                plt.annotate(f'{data_x[j]}, {data_y[i][j]:.2f}', (data_x[j], data_y[i][j]), fontsize=4, textcoords="offset points", 
                xytext=coor, ha='center', arrowprops=dict(arrowstyle="->", connectionstyle="arc3", color="b"))
    
    plt.axvline(200, color=color14, linestyle='--', label='$Best ~ Generalization ~ Point$')

    # setting up title
    plt.title(title, fontweight='bold', fontsize=14)
    plt.xlabel(x_label, fontsize=12)
    plt.ylabel(y_label, fontsize=12)
    
    # setting up label
    plt.legend(loc='upper left', frameon=True, fontsize=6)
    
    # 设置刻度字体和范围
    plt.xticks(fontsize=10)
    plt.yticks(fontsize=10)
    plt.xlim(x_range[0], x_range[1])
    plt.ylim(y_range[0], y_range[1])
    
    # 设置坐标轴样式
    for spine in plt.gca().spines.values():
        spine.set_edgecolor("#CCCCCC")
        spine.set_linewidth(1.5)

    plt.savefig(save_path + '.png', dpi=300, bbox_inches='tight')

    # plt.show()


def start_point_acc():
    ckpt_path = os.getcwd() + '/YOLOX_outputs/Baseline_S/epoch_' + str(150) + '_ckpt.pth'
    margin_small, margin_midle, margin_large, margin_total = eval_voc_scale(ckpt_path)

    print(margin_small)
    print(margin_midle)
    print(margin_large)
    print(margin_total)


def retain_decimal(list_, num):
    for i in range(len(list_)):
        list_[i] = round(list_[i], num)
    return list_


def divide_scale_space():
    # 先储存两个间隔进列表
    scale_index = [0, 16 * 16]
    bins, input_size = 32, 512
    scale_index_tensor = []

    # 再以32*32为间隔划分尺度
    for i in range(1, int(input_size/bins+1)):
        scale_index.append((bins*i)**2)
    
    # 使用scale_index划分目标
    for i in range(len(scale_index)-1):
        sta = int(pow(scale_index[i], 0.5))
        end = int(pow(scale_index[i+1], 0.5))
        scale_index_tensor.append([sta, end])
    
    return scale_index_tensor


def main_finetune(baseline, ckpt_list, adaptive, train_draw):
    margin_train = [[] for i in range(int(512/32+1))]

    # fine-tuning for certain rounds
    for i in ckpt_list:
        margin_list = yoloxdstre(baseline + i)
        for j in range(len(margin_list)):
            margin_train[j].append(margin_list[j])

    # save two decimal for training
    for i in range(len(margin_train)):
        margin_train[i] = retain_decimal(margin_train[i], 2)

    if train_draw:
        # draw fig of training margin
        data_x = [i for i in range(10, 250, 10)]
        data_y = [margin_s_avge, margin_m_avge, margin_l_avge, margin_t_avge]
        data_label = ['margin_small', 'margin_midle', 'margin_large', 'margin_total']
        title, x_label, y_label = 'Z-Scoring Margin', 'Epoch', 'Margin' # 'Fine Tune Margin Epoch 151~160'
        x_range, y_range, save_path = [0, 245], [0, 12], os.getcwd() + '/tblogger/fine_tune_margin' # [150, 161]
        visualize_margin_curve(data_x, data_y, data_label, title, x_label, y_label, x_range, y_range, save_path)

    print(f"trainset margin adaptive: {adaptive}")
    scale_index = divide_scale_space()
    for i in range(len(margin_train)):
        print(f"margin across scale [{scale_index[i][0]}, {scale_index[i][1]}]: {margin_train[i]}")

    print('\n')

    return margin_train


def main_evaluate_v2(baseline, test_epoch, dataset, test_draw): # tuning_len
    margin_s_test, margin_m_test = [], []
    margin_l_test, margin_t_test = [], []
    margin_adaptive_list = [[] for i in range(int(512/32+1))]
    scale_name = ['tiny', 'small', 'dnmid', 'upmid', 'large']
    scale_list = [[] for i in scale_name]

    # evaluating for every rounds
    # for i in range(1, tuning_len+1):
    #     # assemble current ckpt path
    #     ckpt_path = os.getcwd() + '/YOLOX_outputs/build_rewrite/epoch_' + str(test_epoch+i) + '_ckpt.pth'
    
    for i in test_epoch:
        # 用整个数据集评估当前权重
        margin, mAP50, scale_AP = eval_voc_scale_v2(baseline + i, dataset)

        # 分解Margin列表成多个列表
        margin_small, margin_midle, margin_large, margin_total, margin_list = margin

        # 将每轮次的数据分别储存进列表
        margin_s_test.append(margin_small)
        margin_m_test.append(margin_midle)
        margin_l_test.append(margin_large)
        margin_t_test.append(margin_total)
        for j in range(len(margin_list)):
            margin_adaptive_list[j].append(margin_list[j])

        # 分解Scale列表成多个列表
        for j in range(len(scale_AP)):
            scale_list[j].append(scale_AP[j] * 100)

    # save two decimal for testing
    margin_s_test = retain_decimal(margin_s_test, 2)
    margin_m_test = retain_decimal(margin_m_test, 2)
    margin_l_test = retain_decimal(margin_l_test, 2)
    margin_t_test = retain_decimal(margin_t_test, 2)
    for i in range(len(margin_adaptive_list)):
        margin_adaptive_list[i] = retain_decimal(margin_adaptive_list[i], 2)

    for i in range(len(scale_list)):
        scale_list[i] = retain_decimal(scale_list[i], 2)

    if test_draw:
        # draw fig of testing margin
        data_x = [151, 152, 153, 154, 155, 156, 157, 158, 159, 160]
        data_y = [margin_s_test, margin_m_test, margin_l_test, margin_t_test]
        data_label = ['margin_small', 'margin_midle', 'margin_large', 'margin_total']
        title, x_label, y_label = 'Testing Margin Epoch 151~160', 'Epoch', 'Margin'
        x_range, y_range, save_path = [150, 161], [0, 12], os.getcwd() + '/tblogger/testing_margin'
        visualize_margin_curve(data_x, data_y, data_label, title, x_label, y_label, x_range, y_range, save_path)

        # draw fig of testing scale AP
        data_x = [151, 152, 153, 154, 155, 156, 157, 158, 159, 160]
        data_y = [scale_s_AP, scale_m_AP, scale_l_AP]
        data_label = ['Small', 'Middle', 'Large']
        title, x_label, y_label = 'Testing Scale AP Epoch 151~160', 'Epoch', 'AP'
        x_range, y_range, save_path = [150, 161], [0, 100], os.getcwd() + '/tblogger/testing_scale'
        visualize_margin_curve(data_x, data_y, data_label, title, x_label, y_label, x_range, y_range, save_path)

    print("testset margin across scale: ")
    print(f"test small margin: {margin_s_test}")
    print(f"test midle margin: {margin_m_test}")
    print(f"test large margin: {margin_l_test}")
    print(f"test total margin: {margin_t_test}")
    print('\n')

    scale_index = divide_scale_space()
    for i in range(len(margin_adaptive_list)):
        print(f"margin across scale [{scale_index[i][0]}, {scale_index[i][1]}]: {margin_adaptive_list[i]}")
    print('\n')

    print("testset AP across scale: ")
    for i in range(len(scale_list)):
        print(f"test {scale_name[i]} obj AP: {scale_list[i]}")
    print('\n')

    return margin_adaptive_list # [margin_s_test, margin_m_test, margin_l_test, margin_t_test]


def main_evaluate_v1(baseline, ckpt_list):
    margin_s_test, margin_m_test = [], []
    margin_l_test, margin_t_test = [], []
    scale_s_AP, scale_m_AP, scale_l_AP = [], [], []

    for i in range(len(ckpt_list)):
        margin, mAP50, scale_AP = eval_voc_scale_v1(baseline+ckpt_list[i])

        # 分解Margin列表成多个列表
        margin_small, margin_midle, margin_large, margin_total = margin

        # 将每轮次的数据分别储存进列表
        margin_s_test.append(margin_small)
        margin_m_test.append(margin_midle)
        margin_l_test.append(margin_large)
        margin_t_test.append(margin_total)

        # 分解Scale列表成多个列表
        small_AP, midle_AP, large_AP = scale_AP
        scale_s_AP.append(small_AP * 100)
        scale_m_AP.append(midle_AP * 100)
        scale_l_AP.append(large_AP * 100)

        if ckpt_list[i] == ckpt_list[-2]:
    
            # save two decimal for testing
            margin_s_test = retain_decimal(margin_s_test, 2)
            margin_m_test = retain_decimal(margin_m_test, 2)
            margin_l_test = retain_decimal(margin_l_test, 2)
            margin_t_test = retain_decimal(margin_t_test, 2)

            # print out results
            print("testset margin across scale: ")
            print(f"test small margin: {margin_s_test}")
            print(f"test midle margin: {margin_m_test}")
            print(f"test large margin: {margin_l_test}")
            print(f"test total margin: {margin_t_test}")
            print('\n')

    scale_s_AP = retain_decimal(scale_s_AP, 2)
    scale_m_AP = retain_decimal(scale_m_AP, 2)
    scale_l_AP = retain_decimal(scale_l_AP, 2)

    print("testset AP across scale: ")
    print(f"test small obj AP: {scale_s_AP}")
    print(f"test midle obj AP: {scale_m_AP}")
    print(f"test large obj AP: {scale_l_AP}")

    return [scale_s_AP, scale_m_AP, scale_l_AP]


def visualize_control(margin_test_list): # margin_train_list, margin_test_list
    
    data_x = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 
              140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]
    
    # data_y = margin_train_list.extend(margin_test_list)
    data_y = margin_test_list

    # data_label = ['margin_train_s', 'margin_train_m', 'margin_train_l', 'margin_train_t', 
    #               'margin_test_s', 'margin_test_m', 'margin_test_l', 'margin_test_t']

    data_label = ['$Small ~~~ Object ~ AP50$', '$Middle ~ Object ~ AP50$', '$Large ~~ Object ~ AP50$']

    title = 'Test Set Accuracy'

    x_label, y_label = 'Epoch', 'Accuracy'
    x_range, y_range = [0, 245], [0, 120] # if margin [0, 12] # if ap50 [0, 100]

    save_path = '/home/uic/ChengYuxuan/YoloXDSTRe1' + '/tblogger/test_accuracy'

    visualize_margin_curve(data_x, data_y, data_label, title, x_label, y_label, x_range, y_range, save_path, show_point=True)


if __name__ == '__main__':
    ckpt_list, test_epoch, tuning_len = [], 150, 10
    single_point, train_draw, test_draw = False, False, False
    adaptive = False # how scale space divided, original or adaptive
    dataset = [('2007', 'test')] # [('2007', 'trainval')], [('2012', 'trainval')]

    # test one or all weights
    if single_point:
        ckpt_list = ['epoch_' + str(test_epoch) + '_ckpt.pth'] # for test usage
    else:
        for i in range(10, 251, 10):
            ckpt = 'epoch_' + str(i) + '_ckpt.pth'
            ckpt_list.append(ckpt)

    # weight path
    baseline = '/home/uic/ChengYuxuan/' + 'YoloXDSTRe3/YOLOX_outputs/' + 'Baseline_S/' # 'Baseline_S/' # 'build_rewrite/'

    # train & test adaptive bins
    # margin_train_list = main_finetune(baseline, ckpt_list, adaptive, train_draw)
    # margin_test_list = main_evaluate_v2(baseline, ckpt_list, dataset, test_draw) # tuning_len

    # test fixed bins as MSCOCO
    margin_test_list = main_evaluate_v1(baseline, ckpt_list)

    # small_ap = 
    # midle_ap = 
    # large_ap = 
    # visualize_control([small_ap, midle_ap, large_ap])

    # baseline margin
    # [0.46, 0.62, 1.23, 1.66, 1.86, 2.27, 2.14, 2.37, 2.44, 2.82, 2.63, 3.01, 2.86, 3.29, 3.36, 3.61, 3.69, 3.87, 4.08, 3.95, 3.76, 4.620, 4.700, 5.040]
    # [2.43, 3.34, 4.02, 4.75, 5.34, 5.68, 5.85, 6.14, 6.19, 6.67, 6.54, 6.71, 7.04, 7.32, 7.72, 7.83, 7.95, 8.41, 8.50, 8.77, 8.61, 9.160, 8.960, 9.230]
    # [3.01, 4.14, 4.99, 5.51, 6.16, 6.66, 7.02, 7.23, 7.33, 7.67, 8.10, 7.87, 8.40, 8.35, 9.01, 8.94, 9.04, 9.35, 9.56, 9.80, 9.94, 10.05, 10.26, 10.35]

    # baseline testap
    # [20.64, 27.49, 30.63, 34.47, 36.07, 36.63, 38.76, 38.88, 40.74, 40.71, 39.53, 41.23, 40.46, 39.97, 41.02, 41.58, 41.42, 42.18, 41.26, 40.82, 41.46, 41.25, 40.74, 40.67]
    # [40.55, 49.26, 53.13, 56.77, 59.05, 60.70, 61.84, 62.42, 63.46, 64.11, 63.92, 65.36, 65.49, 65.90, 66.36, 66.81, 66.77, 67.23, 67.55, 67.52, 66.22, 66.69, 66.78, 66.51]
    # [59.71, 69.28, 73.54, 76.72, 78.34, 80.01, 80.70, 81.03, 81.66, 82.43, 82.43, 83.22, 83.46, 83.70, 84.11, 84.71, 84.50, 84.83, 84.97, 85.10, 85.23, 85.32, 85.42, 85.42]
    

# Baseline training margin using weights from 10~240
# small obj margin: [0.46, 0.62, 1.23, 1.66, 1.86, 2.27, 2.14, 2.37, 2.44, 2.82, 2.63, 3.01, 2.86, 3.29, 3.36, 3.61, 3.69, 3.87, 4.08, 3.95, 3.76, 4.620, 4.700, 5.040]
# midle obj margin: [2.43, 3.34, 4.02, 4.75, 5.34, 5.68, 5.85, 6.14, 6.19, 6.67, 6.54, 6.71, 7.04, 7.32, 7.72, 7.83, 7.95, 8.41, 8.50, 8.77, 8.61, 9.160, 8.960, 9.230]
# large obj margin: [3.01, 4.14, 4.99, 5.51, 6.16, 6.66, 7.02, 7.23, 7.33, 7.67, 8.10, 7.87, 8.40, 8.35, 9.01, 8.94, 9.04, 9.35, 9.56, 9.80, 9.94, 10.05, 10.26, 10.35]
# total obj margin: [2.35, 3.21, 3.94, 4.55, 5.05, 5.44, 5.69, 5.87, 6.02, 6.32, 6.49, 6.49, 6.86, 6.96, 7.37, 7.51, 7.54, 7.91, 8.04, 8.33, 8.31, 8.700, 8.650, 8.810]

# Baseline training margin adaptive: True
# margin across scale [0,    16]: [-0.61, -0.14, 0.16,  0.45, 0.65, 0.79, 0.74, 1.05, 0.94, 1.05, 1.11, 1.38, 1.39, 1.69, 1.99, 1.79, 1.67, 2.03, 2.07, 2.330, 2.310, 2.610, 2.730, 2.650]
# margin across scale [16,   32]: [0.86,  1.63,  2.22,  2.65, 3.00, 3.24, 3.28, 3.59, 3.83, 3.82, 4.06, 4.06, 4.15, 4.45, 4.70, 4.88, 4.84, 5.27, 5.29, 5.210, 5.430, 5.580, 5.950, 5.990]
# margin across scale [32,   64]: [2.27,  3.63,  4.17,  5.03, 5.27, 5.68, 5.92, 6.21, 6.24, 6.41, 6.54, 6.80, 6.88, 7.05, 7.31, 7.48, 7.56, 7.89, 8.22, 8.130, 8.300, 8.430, 8.760, 8.720]
# margin across scale [64,   96]: [3.09,  4.61,  5.46,  6.18, 6.53, 7.14, 7.13, 7.62, 7.61, 7.90, 8.06, 8.43, 8.43, 8.95, 8.78, 8.89, 9.15, 9.43, 9.63, 9.770, 9.970, 10.03, 10.16, 10.18]
# margin across scale [96,  128]: [3.47,  4.98,  5.87,  7.04, 7.20, 7.84, 7.90, 8.10, 8.24, 8.32, 8.74, 8.92, 9.02, 9.16, 9.20, 9.42, 9.63, 9.84, 9.71, 10.20, 10.24, 10.43, 10.38, 10.47]
# margin across scale [128, 160]: [3.47,  5.09,  5.98,  6.68, 7.20, 7.50, 7.93, 8.23, 8.28, 8.58, 8.19, 9.09, 9.15, 9.46, 9.37, 9.62, 9.71, 9.93, 9.98, 10.04, 10.23, 10.48, 10.26, 10.44]
# margin across scale [160, 192]: [3.10,  4.47,  5.91,  6.58, 6.64, 6.78, 7.53, 7.35, 7.85, 8.09, 8.43, 8.50, 8.55, 8.67, 8.92, 9.31, 9.26, 9.57, 9.74, 9.810, 9.850, 9.970, 10.46, 10.42]
# margin across scale [192, 224]: [2.81,  3.59,  4.91,  5.56, 6.29, 6.42, 6.73, 7.36, 7.51, 7.84, 7.59, 8.08, 8.47, 8.04, 8.66, 8.33, 8.83, 9.11, 9.46, 9.400, 9.680, 9.480, 9.840, 10.30]
# margin across scale [224, 256]: [2.08,  3.25,  4.56,  4.84, 5.11, 6.17, 6.29, 6.39, 5.86, 6.64, 6.61, 6.12, 7.54, 7.47, 7.59, 7.71, 7.36, 8.15, 7.73, 7.900, 7.940, 8.370, 8.830, 8.810]
# margin across scale [256, 288]: [1.71,  2.66,  3.16,  3.97, 4.12, 4.67, 5.29, 5.03, 5.25, 5.10, 5.93, 5.91, 6.04, 6.10, 5.92, 5.65, 6.16, 6.10, 7.08, 6.710, 6.920, 6.760, 6.920, 6.970]
# margin across scale [288, 320]: [1.35,  2.19,  2.85,  3.49, 3.03, 3.26, 3.55, 3.43, 3.96, 4.39, 4.66, 4.37, 4.24, 4.57, 4.53, 4.77, 4.40, 5.24, 5.57, 5.210, 5.430, 5.850, 5.790, 5.680]
# margin across scale [320, 352]: [1.00,  1.43,  1.77,  2.21, 2.50, 2.39, 3.29, 2.72, 2.57, 3.24, 3.47, 3.17, 2.87, 3.66, 2.88, 3.60, 3.13, 4.04, 3.28, 3.680, 3.980, 3.840, 4.480, 4.450]
# margin across scale [352, 384]: [0.67,  0.91,  1.11,  1.43, 1.53, 1.42, 2.06, 1.76, 1.66, 2.12, 1.97, 2.38, 2.01, 2.30, 2.63, 2.29, 2.48, 2.96, 2.73, 2.610, 2.740, 3.110, 2.140, 3.560]
# margin across scale [384, 416]: [0.48,  0.46,  1.03,  0.98, 1.20, 0.91, 1.14, 1.17, 1.35, 1.38, 1.32, 1.39, 1.91, 1.82, 1.62, 1.32, 1.61, 1.50, 1.96, 1.760, 2.330, 1.770, 1.620, 1.990]
# margin across scale [416, 448]: [0.15,  0.45,  0.54,  0.33, 0.31, 0.87, 0.89, 0.76, 0.81, 1.10, 0.54, 0.97, 1.14, 0.83, 1.16, 1.43, 1.06, 1.10, 1.30, 1.140, 1.480, 1.860, 1.540, 1.450]
# margin across scale [448, 480]: [0.15,  0.39,  0.38,  0.46, 0.07, 0.28, 0.42, 0.65, 0.86, 0.36, 0.61, 0.59, 0.59, 0.60, 0.65, 0.82, 1.00, 0.48, 0.53, 0.870, 1.150, 0.810, 0.750, 0.730]
# margin across scale [480, 512]: [0.05,  0.13,  0.16, -0.02, 0.19, 0.18, 0.29, 0.19, 0.36, 0.26, 0.19, 0.30, 0.14, 0.30, 0.45, 0.42, 0.67, 0.68, 0.52, 0.350, 0.430, 0.510, 0.340, 0.490]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Baseline trainset [('2007', 'trainval')] margin across scale: 
# train small margin: [0.44, 0.69, 0.84, 0.99, 1.10, 1.17, 1.23, 1.28, 1.33, 1.37, 1.42, 1.47, 1.49, 1.530, 1.560, 1.610, 1.660, 1.720, 1.770, 1.820, 1.860, 1.910, 1.970, 1.990]
# train midle margin: [1.98, 3.02, 3.62, 4.15, 4.51, 4.75, 4.99, 5.13, 5.29, 5.39, 5.51, 5.65, 5.76, 5.910, 5.980, 6.100, 6.230, 6.350, 6.480, 6.580, 6.670, 6.750, 6.840, 6.900]
# train large margin: [3.84, 5.46, 6.57, 7.52, 8.13, 8.62, 8.94, 9.10, 9.38, 9.58, 9.67, 9.84, 9.99, 10.13, 10.28, 10.38, 10.45, 10.62, 10.71, 10.89, 11.00, 11.08, 11.14, 11.27]
# train total margin: [3.58, 5.16, 6.20, 7.12, 7.71, 8.17, 8.51, 8.69, 8.97, 9.15, 9.28, 9.47, 9.63, 9.800, 9.940, 10.07, 10.20, 10.37, 10.50, 10.68, 10.80, 10.90, 11.00, 11.12]

# Baseline trainset [('2007', 'trainval')] margin adaptive: True
# margin across scale [0,    16]: [0.03, 0.06, 0.08, 0.09, 0.11, 0.12, 0.13, 0.13, 0.14, 0.14, 0.15, 0.16, 0.16, 0.17, 0.18, 0.18, 0.19, 0.20, 0.20, 0.21, 0.22, 0.23, 0.24, 0.24]
# margin across scale [16,   32]: [0.44, 0.69, 0.85, 1.00, 1.11, 1.18, 1.24, 1.29, 1.34, 1.38, 1.43, 1.48, 1.50, 1.54, 1.57, 1.62, 1.67, 1.72, 1.78, 1.83, 1.87, 1.91, 1.97, 1.99]
# margin across scale [32,   64]: [1.40, 2.14, 2.57, 2.96, 3.22, 3.39, 3.54, 3.64, 3.76, 3.83, 3.91, 4.01, 4.09, 4.20, 4.24, 4.34, 4.44, 4.53, 4.64, 4.75, 4.80, 4.85, 4.93, 4.99]
# margin across scale [64,   96]: [1.52, 2.30, 2.73, 3.13, 3.38, 3.56, 3.75, 3.84, 3.95, 4.02, 4.12, 4.23, 4.30, 4.40, 4.46, 4.53, 4.63, 4.70, 4.79, 4.83, 4.90, 4.97, 5.01, 5.05]
# margin across scale [96,  128]: [1.66, 2.38, 2.80, 3.18, 3.41, 3.58, 3.72, 3.82, 3.88, 3.96, 4.00, 4.06, 4.09, 4.16, 4.21, 4.29, 4.34, 4.44, 4.46, 4.53, 4.58, 4.62, 4.65, 4.72]
# margin across scale [128, 160]: [1.70, 2.34, 2.73, 3.09, 3.25, 3.41, 3.53, 3.63, 3.69, 3.76, 3.80, 3.85, 3.89, 3.95, 3.99, 4.04, 4.09, 4.19, 4.19, 4.26, 4.32, 4.38, 4.40, 4.45]
# margin across scale [160, 192]: [1.50, 2.03, 2.38, 2.68, 2.85, 3.01, 3.13, 3.20, 3.27, 3.33, 3.36, 3.40, 3.45, 3.50, 3.53, 3.55, 3.61, 3.66, 3.66, 3.71, 3.77, 3.80, 3.80, 3.83]
# margin across scale [192, 224]: [1.26, 1.77, 2.09, 2.36, 2.52, 2.65, 2.75, 2.80, 2.88, 2.92, 2.94, 3.00, 3.05, 3.09, 3.11, 3.14, 3.17, 3.20, 3.22, 3.26, 3.30, 3.32, 3.35, 3.37]
# margin across scale [224, 256]: [1.14, 1.56, 1.86, 2.12, 2.28, 2.38, 2.46, 2.48, 2.57, 2.61, 2.61, 2.68, 2.72, 2.75, 2.78, 2.80, 2.81, 2.84, 2.87, 2.92, 2.94, 2.96, 2.97, 3.01]
# margin across scale [256, 288]: [1.03, 1.43, 1.72, 1.98, 2.13, 2.25, 2.31, 2.33, 2.43, 2.46, 2.45, 2.52, 2.55, 2.59, 2.62, 2.64, 2.65, 2.67, 2.70, 2.75, 2.78, 2.78, 2.77, 2.81]
# margin across scale [288, 320]: [0.81, 1.14, 1.39, 1.60, 1.74, 1.83, 1.88, 1.88, 1.95, 1.99, 1.98, 2.02, 2.06, 2.07, 2.11, 2.13, 2.13, 2.16, 2.19, 2.23, 2.24, 2.25, 2.26, 2.28]
# margin across scale [320, 352]: [0.64, 0.93, 1.17, 1.37, 1.52, 1.63, 1.70, 1.72, 1.79, 1.82, 1.83, 1.87, 1.90, 1.93, 1.97, 1.99, 1.99, 2.01, 2.04, 2.08, 2.10, 2.12, 2.13, 2.15]
# margin across scale [352, 384]: [0.44, 0.62, 0.77, 0.89, 0.99, 1.07, 1.12, 1.15, 1.21, 1.26, 1.30, 1.32, 1.36, 1.38, 1.41, 1.42, 1.44, 1.47, 1.49, 1.53, 1.55, 1.56, 1.58, 1.59]
# margin across scale [384, 416]: [0.27, 0.40, 0.50, 0.58, 0.66, 0.72, 0.75, 0.77, 0.81, 0.86, 0.88, 0.91, 0.93, 0.96, 0.99, 1.02, 1.03, 1.06, 1.07, 1.11, 1.12, 1.13, 1.15, 1.17]
# margin across scale [416, 448]: [0.13, 0.19, 0.24, 0.28, 0.34, 0.38, 0.40, 0.42, 0.45, 0.47, 0.49, 0.51, 0.54, 0.55, 0.57, 0.59, 0.59, 0.61, 0.64, 0.67, 0.68, 0.69, 0.70, 0.71]
# margin across scale [448, 480]: [0.01, 0.02, 0.02, 0.03, 0.03, 0.04, 0.05, 0.05, 0.05, 0.06, 0.06, 0.06, 0.06, 0.07, 0.07, 0.08, 0.08, 0.08, 0.08, 0.09, 0.09, 0.09, 0.09, 0.10]
# margin across scale [480, 512]: [0.00, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02]

# Baseline testset [('2007', 'test')] AP across scale: 
# test small obj AP: [20.64, 27.49, 30.63, 34.47, 36.07, 36.63, 38.76, 38.88, 40.74, 40.71, 39.53, 41.23, 40.46, 39.97, 41.02, 41.58, 41.42, 42.18, 41.26, 40.82, 41.46, 41.25, 40.74, 40.67]
# test midle obj AP: [40.55, 49.26, 53.13, 56.77, 59.05, 60.70, 61.84, 62.42, 63.46, 64.11, 63.92, 65.36, 65.49, 65.90, 66.36, 66.81, 66.77, 67.23, 67.55, 67.52, 66.22, 66.69, 66.78, 66.51]
# test large obj AP: [59.71, 69.28, 73.54, 76.72, 78.34, 80.01, 80.70, 81.03, 81.66, 82.43, 82.43, 83.22, 83.46, 83.70, 84.11, 84.71, 84.50, 84.83, 84.97, 85.10, 85.23, 85.32, 85.42, 85.42]

# Baseline trainset [('2007', 'trainval')] AP across scale: 
# train tiny  obj AP: [0.010, 0.020, 0.030, 0.000, 9.090, 9.290, 9.420, 3.110, 9.490, 9.180, 9.460, 9.490, 9.730, 5.700, 9.520, 10.05, 10.82, 5.540, 6.020, 6.660, 5.630, 4.340, 4.650, 6.050]
# train small obj AP: [23.11, 35.21, 37.88, 40.35, 42.29, 44.56, 44.39, 47.85, 47.90, 47.89, 49.20, 49.05, 50.37, 49.92, 52.28, 53.70, 54.36, 55.47, 55.98, 56.36, 57.39, 56.57, 58.24, 59.41]
# train dnmid obj AP: [37.55, 46.91, 53.12, 56.62, 58.53, 59.91, 60.60, 61.52, 62.78, 63.47, 64.37, 65.19, 66.36, 66.96, 67.30, 68.08, 68.21, 69.42, 69.73, 71.13, 71.40, 72.72, 74.66, 73.07]
# train upmid obj AP: [35.50, 42.56, 48.22, 52.35, 54.70, 56.59, 58.36, 59.26, 60.77, 61.18, 62.21, 62.71, 63.67, 64.77, 64.85, 66.05, 67.47, 67.95, 67.98, 69.45, 70.41, 70.97, 71.21, 71.43]
# train large obj AP: [60.43, 69.94, 74.38, 77.69, 80.04, 81.62, 82.65, 83.71, 84.36, 85.12, 85.66, 86.23, 86.83, 87.39, 87.73, 88.05, 88.50, 88.82, 89.16, 89.41, 89.60, 89.74, 89.83, 89.95]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Baseline trainset [('2007', 'trainval')] margin across scale: 
# test small margin: [0.44, 0.69, 0.84, 0.99, 1.10, 1.17, 1.23, 1.28, 1.33, 1.37, 1.42, 1.47, 1.49, 1.530, 1.560, 1.610, 1.660, 1.720, 1.770, 1.820, 1.860, 1.910, 1.970, 1.990]
# test midle margin: [1.98, 3.02, 3.62, 4.15, 4.51, 4.75, 4.99, 5.13, 5.29, 5.39, 5.51, 5.65, 5.76, 5.910, 5.980, 6.100, 6.230, 6.350, 6.480, 6.580, 6.670, 6.750, 6.840, 6.900]
# test large margin: [3.84, 5.46, 6.57, 7.52, 8.13, 8.62, 8.94, 9.10, 9.38, 9.58, 9.67, 9.84, 9.99, 10.13, 10.28, 10.38, 10.45, 10.62, 10.71, 10.89, 11.00, 11.08, 11.14, 11.27]
# test total margin: [3.58, 5.16, 6.20, 7.12, 7.71, 8.17, 8.51, 8.69, 8.97, 9.15, 9.28, 9.47, 9.63, 9.800, 9.940, 10.07, 10.20, 10.37, 10.50, 10.68, 10.80, 10.90, 11.00, 11.12]

# Baseline trainset [('2007', 'trainval')] margin adaptive: True
# margin across scale [0,    16]: [0.03, 0.06, 0.08, 0.09, 0.11, 0.12, 0.13, 0.13, 0.14, 0.14, 0.15, 0.16, 0.16, 0.17, 0.18, 0.18, 0.19, 0.20, 0.20, 0.21, 0.22, 0.23, 0.24, 0.24]
# margin across scale [16,   32]: [0.44, 0.69, 0.85, 1.00, 1.11, 1.18, 1.24, 1.29, 1.34, 1.38, 1.43, 1.48, 1.50, 1.54, 1.57, 1.62, 1.67, 1.72, 1.78, 1.83, 1.87, 1.91, 1.97, 1.99]
# margin across scale [32,   64]: [1.40, 2.14, 2.57, 2.96, 3.22, 3.39, 3.54, 3.64, 3.76, 3.83, 3.91, 4.01, 4.09, 4.20, 4.24, 4.34, 4.44, 4.53, 4.64, 4.75, 4.80, 4.85, 4.93, 4.99]
# margin across scale [64,   96]: [1.52, 2.30, 2.73, 3.13, 3.38, 3.56, 3.75, 3.84, 3.95, 4.02, 4.12, 4.23, 4.30, 4.40, 4.46, 4.53, 4.63, 4.70, 4.79, 4.83, 4.90, 4.97, 5.01, 5.05]
# margin across scale [96,  128]: [1.66, 2.38, 2.80, 3.18, 3.41, 3.58, 3.72, 3.82, 3.88, 3.96, 4.00, 4.06, 4.09, 4.16, 4.21, 4.29, 4.34, 4.44, 4.46, 4.53, 4.58, 4.62, 4.65, 4.72]
# margin across scale [128, 160]: [1.70, 2.34, 2.73, 3.09, 3.25, 3.41, 3.53, 3.63, 3.69, 3.76, 3.80, 3.85, 3.89, 3.95, 3.99, 4.04, 4.09, 4.19, 4.19, 4.26, 4.32, 4.38, 4.40, 4.45]
# margin across scale [160, 192]: [1.50, 2.03, 2.38, 2.68, 2.85, 3.01, 3.13, 3.20, 3.27, 3.33, 3.36, 3.40, 3.45, 3.50, 3.53, 3.55, 3.61, 3.66, 3.66, 3.71, 3.77, 3.80, 3.80, 3.83]
# margin across scale [192, 224]: [1.26, 1.77, 2.09, 2.36, 2.52, 2.65, 2.75, 2.80, 2.88, 2.92, 2.94, 3.00, 3.05, 3.09, 3.11, 3.14, 3.17, 3.20, 3.22, 3.26, 3.30, 3.32, 3.35, 3.37]
# margin across scale [224, 256]: [1.14, 1.56, 1.86, 2.12, 2.28, 2.38, 2.46, 2.48, 2.57, 2.61, 2.61, 2.68, 2.72, 2.75, 2.78, 2.80, 2.81, 2.84, 2.87, 2.92, 2.94, 2.96, 2.97, 3.01]
# margin across scale [256, 288]: [1.03, 1.43, 1.72, 1.98, 2.13, 2.25, 2.31, 2.33, 2.43, 2.46, 2.45, 2.52, 2.55, 2.59, 2.62, 2.64, 2.65, 2.67, 2.70, 2.75, 2.78, 2.78, 2.77, 2.81]
# margin across scale [288, 320]: [0.81, 1.14, 1.39, 1.60, 1.74, 1.83, 1.88, 1.88, 1.95, 1.99, 1.98, 2.02, 2.06, 2.07, 2.11, 2.13, 2.13, 2.16, 2.19, 2.23, 2.24, 2.25, 2.26, 2.28]
# margin across scale [320, 352]: [0.64, 0.93, 1.17, 1.37, 1.52, 1.63, 1.70, 1.72, 1.79, 1.82, 1.83, 1.87, 1.90, 1.93, 1.97, 1.99, 1.99, 2.01, 2.04, 2.08, 2.10, 2.12, 2.13, 2.15]
# margin across scale [352, 384]: [0.44, 0.62, 0.77, 0.89, 0.99, 1.07, 1.12, 1.15, 1.21, 1.26, 1.30, 1.32, 1.36, 1.38, 1.41, 1.42, 1.44, 1.47, 1.49, 1.53, 1.55, 1.56, 1.58, 1.59]
# margin across scale [384, 416]: [0.27, 0.40, 0.50, 0.58, 0.66, 0.72, 0.75, 0.77, 0.81, 0.86, 0.88, 0.91, 0.93, 0.96, 0.99, 1.02, 1.03, 1.06, 1.07, 1.11, 1.12, 1.13, 1.15, 1.17]
# margin across scale [416, 448]: [0.13, 0.19, 0.24, 0.28, 0.34, 0.38, 0.40, 0.42, 0.45, 0.47, 0.49, 0.51, 0.54, 0.55, 0.57, 0.59, 0.59, 0.61, 0.64, 0.67, 0.68, 0.69, 0.70, 0.71]
# margin across scale [448, 480]: [0.01, 0.02, 0.02, 0.03, 0.03, 0.04, 0.05, 0.05, 0.05, 0.06, 0.06, 0.06, 0.06, 0.07, 0.07, 0.08, 0.08, 0.08, 0.08, 0.09, 0.09, 0.09, 0.09, 0.10]
# margin across scale [480, 512]: [0.00, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02]

# Baseline trainset [('2007', 'trainval')] AP across scale: 
# test tiny  obj AP: [0.010, 0.020, 0.030, 0.000, 9.090, 9.290, 9.420, 3.110, 9.490, 9.180, 9.460, 9.490, 9.730, 5.700, 9.520, 10.05, 10.82, 5.540, 6.020, 6.660, 5.630, 4.340, 4.650, 6.050]
# test small obj AP: [23.11, 35.21, 37.88, 40.35, 42.29, 44.56, 44.39, 47.85, 47.90, 47.89, 49.20, 49.05, 50.37, 49.92, 52.28, 53.70, 54.36, 55.47, 55.98, 56.36, 57.39, 56.57, 58.24, 59.41]
# test dnmid obj AP: [37.55, 46.91, 53.12, 56.62, 58.53, 59.91, 60.60, 61.52, 62.78, 63.47, 64.37, 65.19, 66.36, 66.96, 67.30, 68.08, 68.21, 69.42, 69.73, 71.13, 71.40, 72.72, 74.66, 73.07]
# test upmid obj AP: [35.50, 42.56, 48.22, 52.35, 54.70, 56.59, 58.36, 59.26, 60.77, 61.18, 62.21, 62.71, 63.67, 64.77, 64.85, 66.05, 67.47, 67.95, 67.98, 69.45, 70.41, 70.97, 71.21, 71.43]
# test large obj AP: [60.43, 69.94, 74.38, 77.69, 80.04, 81.62, 82.65, 83.71, 84.36, 85.12, 85.66, 86.23, 86.83, 87.39, 87.73, 88.05, 88.50, 88.82, 89.16, 89.41, 89.60, 89.74, 89.83, 89.95]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Baseline trainset [('2012', 'trainval')] margin across scale: 
# train small margin: [0.28, 0.51, 0.66, 0.79, 0.89, 0.96, 1.00, 1.04, 1.09, 1.13, 1.18, 1.23, 1.26, 1.31, 1.340, 1.390, 1.440, 1.490, 1.54, 1.590, 1.630, 1.680, 1.740, 1.770]
# train midle margin: [1.48, 2.34, 2.85, 3.33, 3.63, 3.85, 4.05, 4.17, 4.31, 4.41, 4.52, 4.65, 4.77, 4.89, 4.970, 5.090, 5.220, 5.340, 5.44, 5.550, 5.630, 5.730, 5.810, 5.890]
# train large margin: [3.61, 5.18, 6.27, 7.20, 7.85, 8.35, 8.67, 8.84, 9.16, 9.36, 9.46, 9.64, 9.75, 9.87, 10.04, 10.14, 10.24, 10.40, 10.5, 10.73, 10.83, 10.93, 10.99, 11.12]
# train total margin: [3.28, 4.82, 5.83, 6.73, 7.35, 7.82, 8.15, 8.33, 8.65, 8.84, 8.98, 9.18, 9.31, 9.47, 9.630, 9.760, 9.890, 10.07, 10.2, 10.42, 10.54, 10.66, 10.75, 10.89]

# Baseline trainset [('2012', 'trainval')] margin adaptive: True
# margin across scale [0,    16]: [0.01, 0.04, 0.06, 0.08, 0.10, 0.11, 0.12, 0.13, 0.14, 0.14, 0.16, 0.17, 0.17, 0.18, 0.19, 0.19, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.27]
# margin across scale [16,   32]: [0.28, 0.52, 0.67, 0.80, 0.89, 0.96, 1.00, 1.04, 1.09, 1.13, 1.18, 1.23, 1.26, 1.30, 1.33, 1.38, 1.43, 1.47, 1.53, 1.57, 1.61, 1.66, 1.72, 1.74]
# margin across scale [32,   64]: [0.93, 1.51, 1.83, 2.14, 2.35, 2.50, 2.62, 2.70, 2.80, 2.88, 2.94, 3.04, 3.13, 3.23, 3.27, 3.36, 3.44, 3.53, 3.63, 3.71, 3.77, 3.84, 3.91, 3.97]
# margin across scale [64,   96]: [1.15, 1.78, 2.13, 2.48, 2.68, 2.84, 3.00, 3.08, 3.16, 3.24, 3.32, 3.40, 3.47, 3.55, 3.62, 3.69, 3.77, 3.85, 3.90, 3.96, 4.02, 4.08, 4.13, 4.17]
# margin across scale [96,  128]: [1.34, 1.93, 2.29, 2.63, 2.82, 2.97, 3.10, 3.16, 3.24, 3.29, 3.34, 3.39, 3.43, 3.49, 3.53, 3.59, 3.64, 3.71, 3.73, 3.79, 3.84, 3.89, 3.91, 3.97]
# margin across scale [128, 160]: [1.37, 1.90, 2.24, 2.56, 2.73, 2.87, 2.98, 3.04, 3.10, 3.17, 3.19, 3.24, 3.26, 3.31, 3.33, 3.39, 3.43, 3.50, 3.51, 3.58, 3.60, 3.66, 3.68, 3.72]
# margin across scale [160, 192]: [1.31, 1.82, 2.13, 2.42, 2.56, 2.72, 2.82, 2.89, 2.95, 3.02, 3.03, 3.09, 3.12, 3.16, 3.17, 3.21, 3.26, 3.31, 3.33, 3.38, 3.42, 3.47, 3.48, 3.52]
# margin across scale [192, 224]: [1.25, 1.72, 2.03, 2.30, 2.45, 2.59, 2.69, 2.72, 2.82, 2.86, 2.86, 2.92, 2.96, 2.99, 3.01, 3.05, 3.09, 3.13, 3.15, 3.18, 3.22, 3.24, 3.27, 3.31]
# margin across scale [224, 256]: [1.12, 1.57, 1.89, 2.16, 2.35, 2.47, 2.55, 2.58, 2.69, 2.73, 2.73, 2.79, 2.82, 2.86, 2.89, 2.92, 2.94, 2.97, 2.99, 3.03, 3.07, 3.09, 3.10, 3.14]
# margin across scale [256, 288]: [0.98, 1.39, 1.69, 1.93, 2.10, 2.20, 2.26, 2.27, 2.37, 2.40, 2.41, 2.46, 2.47, 2.49, 2.54, 2.55, 2.56, 2.58, 2.60, 2.65, 2.68, 2.69, 2.69, 2.72]
# margin across scale [288, 320]: [0.80, 1.14, 1.40, 1.61, 1.76, 1.87, 1.93, 1.96, 2.06, 2.10, 2.11, 2.16, 2.18, 2.19, 2.25, 2.25, 2.27, 2.29, 2.32, 2.37, 2.40, 2.41, 2.42, 2.45]
# margin across scale [320, 352]: [0.65, 0.94, 1.16, 1.35, 1.50, 1.61, 1.68, 1.72, 1.81, 1.86, 1.89, 1.93, 1.95, 1.98, 2.03, 2.04, 2.06, 2.08, 2.12, 2.18, 2.20, 2.21, 2.21, 2.24]
# margin across scale [352, 384]: [0.46, 0.67, 0.83, 0.97, 1.10, 1.20, 1.27, 1.29, 1.37, 1.43, 1.47, 1.51, 1.53, 1.55, 1.61, 1.62, 1.63, 1.66, 1.69, 1.74, 1.76, 1.77, 1.78, 1.80]
# margin across scale [384, 416]: [0.36, 0.52, 0.63, 0.73, 0.82, 0.90, 0.95, 0.98, 1.05, 1.09, 1.12, 1.15, 1.18, 1.20, 1.25, 1.27, 1.27, 1.31, 1.34, 1.40, 1.41, 1.41, 1.44, 1.45]
# margin across scale [416, 448]: [0.16, 0.26, 0.33, 0.40, 0.48, 0.54, 0.57, 0.59, 0.64, 0.67, 0.70, 0.73, 0.75, 0.78, 0.82, 0.86, 0.87, 0.91, 0.94, 1.00, 1.02, 1.04, 1.07, 1.11]
# margin across scale [448, 480]: [0.03, 0.05, 0.05, 0.06, 0.07, 0.07, 0.08, 0.08, 0.09, 0.09, 0.09, 0.09, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10, 0.11, 0.11, 0.11, 0.11, 0.11, 0.12]
# margin across scale [480, 512]: [0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04]

# Baseline trainset [('2012', 'trainval')] AP across scale: 
# train tiny  obj AP: [0.430, 1.620, 2.800, 3.110, 3.040, 3.500, 3.050, 4.640, 4.560, 5.010, 5.190, 4.620, 6.030, 4.940, 5.090, 7.000, 5.560, 7.620, 7.150, 8.400, 10.30, 10.75, 12.79, 12.03]
# train small obj AP: [15.16, 22.32, 26.90, 29.80, 32.44, 34.17, 35.96, 36.79, 37.38, 39.68, 41.20, 41.99, 42.90, 45.19, 45.43, 46.18, 48.04, 48.88, 49.52, 51.24, 51.92, 52.73, 54.03, 54.72]
# train dnmid obj AP: [31.91, 40.97, 45.94, 49.49, 51.84, 53.88, 54.68, 56.04, 56.93, 59.06, 60.21, 60.78, 61.81, 63.78, 64.66, 65.65, 66.85, 67.56, 69.12, 70.88, 72.01, 72.74, 73.80, 74.59]
# train upmid obj AP: [29.98, 39.88, 44.88, 48.47, 52.09, 54.06, 55.42, 57.06, 58.44, 60.15, 61.13, 61.67, 62.93, 63.45, 64.31, 65.74, 67.04, 67.67, 68.76, 70.12, 71.15, 71.45, 72.46, 72.79]
# train large obj AP: [59.24, 69.97, 75.20, 79.03, 81.83, 83.54, 84.60, 85.65, 86.36, 87.19, 87.94, 88.43, 89.29, 89.74, 90.40, 91.12, 91.72, 92.41, 92.81, 93.35, 93.87, 94.27, 94.62, 94.87]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin_Linear 78.13 testset [('2007', 'test')] margin across scale:
# test small margin: [0.36, 0.59, 0.73, 0.86, 0.96, 1.02, 1.05, 1.09, 1.13, 1.17, 1.20, 1.24, 1.25, 1.28, 1.29, 1.33, 1.36, 1.40, 1.42, 1.44, 1.460, 1.470, 1.500, 1.500]
# test midle margin: [1.85, 2.81, 3.31, 3.78, 4.07, 4.28, 4.47, 4.55, 4.67, 4.77, 4.84, 4.94, 5.03, 5.13, 5.15, 5.20, 5.30, 5.39, 5.45, 5.50, 5.520, 5.530, 5.580, 5.600]
# test large margin: [3.96, 5.52, 6.58, 7.49, 8.02, 8.43, 8.70, 8.80, 9.07, 9.23, 9.27, 9.40, 9.50, 9.56, 9.67, 9.71, 9.75, 9.85, 9.88, 10.0, 10.02, 10.04, 10.03, 10.11]
# test total margin: [3.67, 5.21, 6.19, 7.06, 7.57, 7.96, 8.24, 8.36, 8.63, 8.78, 8.85, 9.00, 9.11, 9.22, 9.29, 9.37, 9.44, 9.55, 9.60, 9.71, 9.740, 9.760, 9.780, 9.850]

# Margin_Linear tesetset [('2007', 'test')] margin adaptive: True
# margin across scale [0,    16]: [0.01, 0.04, 0.05, 0.07, 0.07, 0.08, 0.08, 0.09, 0.09, 0.10, 0.11, 0.11, 0.11, 0.11, 0.12, 0.12, 0.12, 0.13, 0.14, 0.15, 0.15, 0.16, 0.16, 0.16]
# margin across scale [16,   32]: [0.36, 0.60, 0.73, 0.86, 0.96, 1.02, 1.05, 1.09, 1.13, 1.16, 1.20, 1.24, 1.25, 1.28, 1.29, 1.32, 1.35, 1.39, 1.41, 1.42, 1.45, 1.46, 1.49, 1.49]
# margin across scale [32,   64]: [1.21, 1.85, 2.18, 2.50, 2.70, 2.82, 2.93, 3.00, 3.09, 3.16, 3.20, 3.26, 3.35, 3.41, 3.42, 3.48, 3.53, 3.59, 3.65, 3.69, 3.69, 3.70, 3.73, 3.74]
# margin across scale [64,   96]: [1.52, 2.23, 2.60, 2.96, 3.17, 3.33, 3.48, 3.54, 3.62, 3.68, 3.74, 3.81, 3.86, 3.94, 3.96, 4.00, 4.07, 4.12, 4.15, 4.17, 4.20, 4.20, 4.22, 4.24]
# margin across scale [96,  128]: [1.51, 2.14, 2.53, 2.90, 3.08, 3.21, 3.31, 3.37, 3.42, 3.49, 3.53, 3.57, 3.58, 3.63, 3.64, 3.67, 3.71, 3.75, 3.75, 3.79, 3.79, 3.80, 3.78, 3.80]
# margin across scale [128, 160]: [1.75, 2.34, 2.69, 3.02, 3.16, 3.30, 3.41, 3.49, 3.54, 3.58, 3.61, 3.64, 3.64, 3.68, 3.70, 3.75, 3.75, 3.82, 3.79, 3.82, 3.83, 3.86, 3.85, 3.86]
# margin across scale [160, 192]: [1.66, 2.15, 2.47, 2.74, 2.84, 2.97, 3.07, 3.11, 3.20, 3.24, 3.24, 3.28, 3.32, 3.36, 3.35, 3.37, 3.42, 3.43, 3.43, 3.48, 3.48, 3.50, 3.49, 3.50]
# margin across scale [192, 224]: [1.32, 1.82, 2.14, 2.41, 2.57, 2.68, 2.79, 2.81, 2.90, 2.95, 2.94, 3.01, 3.04, 3.06, 3.09, 3.10, 3.14, 3.16, 3.16, 3.19, 3.19, 3.21, 3.20, 3.23]
# margin across scale [224, 256]: [1.20, 1.67, 1.98, 2.26, 2.40, 2.51, 2.58, 2.58, 2.68, 2.69, 2.69, 2.74, 2.78, 2.79, 2.82, 2.84, 2.85, 2.87, 2.86, 2.88, 2.89, 2.89, 2.88, 2.91]
# margin across scale [256, 288]: [1.00, 1.40, 1.66, 1.90, 2.03, 2.12, 2.16, 2.16, 2.25, 2.25, 2.26, 2.30, 2.33, 2.33, 2.37, 2.37, 2.35, 2.37, 2.39, 2.41, 2.43, 2.43, 2.43, 2.45]
# margin across scale [288, 320]: [0.76, 1.08, 1.30, 1.50, 1.62, 1.71, 1.77, 1.77, 1.83, 1.87, 1.88, 1.92, 1.93, 1.95, 1.98, 1.98, 1.98, 1.99, 2.00, 2.03, 2.03, 2.03, 2.04, 2.06]
# margin across scale [320, 352]: [0.67, 0.96, 1.17, 1.36, 1.49, 1.57, 1.62, 1.64, 1.70, 1.73, 1.74, 1.76, 1.79, 1.79, 1.82, 1.82, 1.82, 1.83, 1.85, 1.87, 1.87, 1.87, 1.87, 1.88]
# margin across scale [352, 384]: [0.45, 0.65, 0.81, 0.93, 1.02, 1.10, 1.15, 1.16, 1.23, 1.27, 1.28, 1.32, 1.33, 1.34, 1.37, 1.38, 1.38, 1.41, 1.43, 1.46, 1.46, 1.45, 1.46, 1.47]
# margin across scale [384, 416]: [0.34, 0.47, 0.58, 0.67, 0.75, 0.81, 0.84, 0.86, 0.91, 0.95, 0.95, 0.98, 1.01, 1.01, 1.04, 1.06, 1.07, 1.09, 1.10, 1.13, 1.14, 1.13, 1.14, 1.15]
# margin across scale [416, 448]: [0.10, 0.16, 0.21, 0.26, 0.31, 0.34, 0.36, 0.37, 0.38, 0.41, 0.42, 0.43, 0.45, 0.46, 0.47, 0.47, 0.48, 0.50, 0.50, 0.52, 0.52, 0.52, 0.53, 0.54]
# margin across scale [448, 480]: [0.01, 0.01, 0.01, 0.02, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04]
# margin across scale [480, 512]: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.02, 0.02, 0.02, 0.02]

# Margin_Linear testset [('2007', 'test')] AP across scale: 
# test small obj AP: [20.64, 27.49, 30.63, 34.47, 36.07, 36.63, 38.76, 38.88, 40.74, 40.71, 39.53, 41.23, 40.46, 39.97, 41.02, 41.58, 41.42, 42.18, 41.26, 40.82, 41.46, 41.25, 40.74, 40.67]
# test midle obj AP: [40.55, 49.26, 53.13, 56.77, 59.05, 60.70, 61.84, 62.42, 63.46, 64.11, 63.92, 65.36, 65.49, 65.90, 66.36, 66.81, 66.77, 67.23, 67.55, 67.52, 66.22, 66.69, 66.78, 66.51]
# test large obj AP: [59.71, 69.28, 73.54, 76.72, 78.34, 80.01, 80.70, 81.03, 81.66, 82.43, 82.43, 83.22, 83.46, 83.70, 84.11, 84.71, 84.50, 84.83, 84.97, 85.10, 85.23, 85.32, 85.42, 85.42]

# testset AP across scale: 
# test small obj AP: [22.40, 27.25, 30.56, 32.68, 34.31, 35.70, 36.44, 38.15, 39.58, 39.74, 40.88, 40.25, 40.89, 42.17, 42.98, 42.95, 42.71, 40.39, 43.68, 42.64, 41.07, 41.37, 41.21, 41.85]
# test midle obj AP: [41.26, 49.37, 53.21, 56.53, 58.35, 60.07, 61.01, 61.87, 62.92, 63.50, 64.33, 64.71, 64.91, 65.86, 66.39, 66.20, 66.69, 66.68, 67.00, 66.77, 67.33, 67.16, 66.60, 66.81]
# test large obj AP: [59.63, 68.37, 72.25, 75.31, 77.34, 78.78, 79.82, 80.53, 81.20, 81.67, 82.09, 82.89, 83.18, 83.52, 83.96, 84.03, 84.35, 84.28, 84.62, 84.69, 84.86, 85.03, 84.95, 84.93]

# test tiny  obj AP: [00.00, 0.150, 0.530, 1.370, 2.480, 5.090, 5.870, 3.930, 5.380, 3.750, 6.000, 4.230, 4.710, 6.340, 8.130, 11.62, 13.85, 27.95, 33.93, 1.620, 18.79, 19.19, 20.15, 17.10]
# test small obj AP: [21.14, 27.83, 30.87, 34.58, 36.53, 36.37, 38.89, 39.28, 40.93, 40.95, 40.08, 41.47, 40.57, 40.14, 41.18, 42.05, 41.42, 42.10, 41.32, 40.39, 40.92, 40.66, 40.15, 40.38]
# test dnmid obj AP: [33.93, 42.38, 46.36, 49.44, 52.01, 52.61, 53.77, 54.43, 55.04, 55.87, 55.75, 56.62, 57.18, 57.84, 58.11, 58.27, 58.59, 59.40, 59.18, 59.28, 58.65, 59.50, 59.47, 59.44]
# test upmid obj AP: [35.30, 41.66, 45.73, 48.55, 50.66, 52.22, 53.03, 53.27, 53.74, 54.63, 54.69, 55.35, 55.34, 55.76, 55.85, 56.66, 56.22, 56.62, 56.61, 57.38, 55.75, 55.97, 56.53, 56.64]
# test large obj AP: [59.71, 69.28, 73.54, 76.72, 78.34, 80.01, 80.70, 81.03, 81.66, 82.43, 82.43, 83.22, 83.46, 83.70, 84.11, 84.71, 84.50, 84.83, 84.97, 85.10, 85.23, 85.32, 85.42, 85.42]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin_Linear 76.23 testset AP across scale: 
# test small obj AP: [20.56, 25.61, 28.66, 31.13, 33.36, 35.58, 35.94, 36.59, 37.53, 37.04, 37.77, 37.96, 40.22, 41.5, 39.81, 39.87, 40.25, 39.44, 39.81, 41.92, 41.52, 40.88, 40.72, 41.46]
# test midle obj AP: [40.43, 48.26, 51.58, 55.02, 57.01, 58.84, 60.03, 61.17, 62.27, 62.71, 62.95, 64.34, 64.89, 64.71, 65.07, 65.43, 66.04, 65.91, 66.18, 66.64, 66.92, 66.63, 66.72, 66.56]
# test large obj AP: [54.75, 64.19, 68.47, 72.23, 74.49, 76.15, 77.36, 78.31, 79.22, 79.58, 80.1, 80.73, 81.33, 81.68, 82.13, 82.3, 82.6, 82.97, 83.19, 83.59, 83.43, 83.82, 83.69, 83.78]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Dynamic Scale Training testset AP across scale:
# test small obj AP: [22.93, 28.36, 32.62, 35.37, 35.45, 36.91, 36.00, 38.21, 39.97, 40.52, 40.12, 42.02, 41.64, 42.91, 43.42, 42.89, 40.99, 42.72, 43.87, 45.25, 43.66, 42.19, 40.71, 42.34]
# test midle obj AP: [42.91, 49.95, 53.74, 57.12, 59.31, 60.57, 61.65, 62.76, 63.54, 63.68, 64.49, 64.97, 65.49, 66.06, 66.15, 66.51, 66.70, 67.05, 67.01, 67.15, 67.30, 67.37, 67.62, 67.25]
# test large obj AP: [61.29, 69.97, 74.04, 76.64, 78.47, 79.92, 80.96, 81.53, 82.14, 82.85, 83.30, 83.27, 83.88, 84.17, 84.45, 84.71, 85.02, 85.37, 85.31, 85.32, 85.47, 85.31, 85.54, 85.31]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin Only M & L M=-1, L=-2
# test small obj AP: [22.83, 28.59, 30.54, 33.21, 35.45, 37.29, 38.61, 38.31, 39.60, 39.64, 40.32, 41.43, 42.41, 40.48, 42.58, 42.25, 43.48, 44.52, 43.29, 42.66, 41.99, 41.20, 41.27, 41.85]
# test midle obj AP: [42.01, 49.90, 53.86, 56.79, 59.06, 60.36, 61.66, 62.40, 63.40, 63.89, 64.02, 64.43, 65.61, 65.90, 65.78, 66.69, 66.45, 67.08, 67.08, 67.14, 67.21, 66.94, 66.95, 66.82]
# test large obj AP: [60.90, 69.51, 73.34, 76.02, 78.04, 79.48, 80.29, 80.97, 81.62, 82.17, 82.38, 82.70, 83.51, 83.94, 84.09, 84.39, 84.56, 84.85, 85.17, 85.01, 85.07, 85.27, 85.68, 85.56]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin S=-1, M=-0.5, L=-0.25 testset AP across scale: 
# test small obj AP: [21.70, 27.35, 30.71, 34.40, 36.67, 37.33, 38.56, 40.89, 40.29, 40.03, 42.37, 39.67, 41.93, 43.94, 41.37, 43.11, 42.38, 41.43, 44.19, 40.85, 40.48, 42.27, 41.15, 39.65]
# test midle obj AP: [40.72, 48.79, 53.30, 56.59, 58.27, 60.16, 61.69, 62.50, 63.31, 63.72, 64.62, 64.84, 65.58, 66.00, 66.38, 66.87, 67.13, 67.53, 67.60, 67.48, 67.52, 67.03, 67.08, 66.90]
# test large obj AP: [60.52, 69.38, 73.55, 76.82, 78.15, 79.67, 80.40, 81.26, 81.89, 82.42, 82.73, 83.20, 83.65, 83.84, 84.18, 84.42, 84.87, 85.00, 85.09, 85.44, 85.41, 85.38, 85.40, 85.55]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin S=-1, M=-0.5, L=-0.25 + DST testset AP across scale: 
# test small obj AP: [24.30, 29.15, 31.06, 31.86, 34.56, 34.01, 35.14, 39.27, 39.13, 38.61, 39.20, 40.85, 42.69, 38.64, 41.20, 40.18, 40.67, 41.32, 39.44, 39.57, 38.12, 39.35, 40.22, 37.28]
# test midle obj AP: [44.23, 50.71, 54.85, 57.28, 59.76, 61.52, 62.62, 63.39, 64.45, 64.34, 65.41, 66.20, 66.54, 66.43, 66.72, 66.97, 67.13, 67.37, 67.73, 67.47, 67.10, 67.72, 67.49, 67.49]
# test large obj AP: [62.45, 71.00, 74.33, 77.29, 78.86, 79.96, 80.87, 81.66, 82.07, 82.53, 83.27, 83.50, 83.73, 84.09, 84.30, 84.61, 84.79, 85.25, 85.30, 85.54, 85.32, 85.61, 85.56, 85.58]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Gradient S Loss cls * 1.5 testset AP across scale: 
# test small obj AP: [21.29, 27.99, 31.21, 34.04, 34.99, 34.98, 36.02, 36.66, 37.32, 37.68, 40.06, 40.62, 41.55, 41.34, 40.69, 41.87, 40.92, 42.88, 43.92, 42.86, 42.99, 41.17, 40.61, 42.06]
# test midle obj AP: [42.17, 50.14, 54.17, 56.94, 59.33, 60.12, 60.98, 62.12, 63.55, 63.58, 65.09, 65.24, 65.34, 66.00, 66.85, 66.76, 67.55, 67.55, 67.63, 67.39, 68.21, 67.75, 67.25, 67.08]
# test large obj AP: [60.30, 69.17, 73.39, 76.45, 78.48, 79.70, 80.45, 81.11, 81.88, 82.19, 82.71, 82.95, 83.68, 83.91, 84.47, 84.74, 84.69, 84.77, 84.84, 85.03, 85.16, 85.32, 85.34, 85.53]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Large Cls Loss * 1.2 testset AP across scale: 
# test small obj AP: [21.93, 27.48, 31.14, 31.95, 34.85, 35.55, 36.66, 37.47, 37.59, 38.64, 38.29, 38.63, 38.94, 41.29, 40.48, 40.68, 41.37, 41.41, 41.75, 41.46, 41.62, 41.67, 41.16, 39.56, 40.69]
# test midle obj AP: [41.62, 49.59, 53.85, 56.64, 59.25, 60.54, 61.08, 62.23, 63.19, 63.60, 64.59, 64.72, 64.87, 65.41, 65.97, 66.28, 66.62, 66.65, 66.85, 67.25, 66.35, 66.88, 66.79, 66.91, 66.85]
# test large obj AP: [61.83, 69.86, 73.76, 76.67, 78.04, 79.44, 80.58, 81.31, 82.12, 82.42, 83.03, 83.12, 83.47, 84.19, 84.15, 84.36, 84.85, 84.95, 85.26, 85.43, 85.30, 85.52, 85.55, 85.52, 85.62]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# scale adaptive loss testset AP across scale: 
# test small obj AP: [7.82, 16.58, 18.38, 20.06, 21.12, 22.72, 23.33, 24.5, 25.4, 25.44, 25.41, 26.11, 26.82, 25.81, 24.14, 26.94, 27.61, 28.55, 28.21, 28.36, 29.75, 31.01, 30.75, 30.92, 31.52]
# test midle obj AP: [18.08, 25.09, 29.33, 34.02, 36.46, 38.82, 40.64, 42.13, 42.98, 44.17, 45.24, 46.73, 48.18, 49.42, 49.2, 50.33, 51.69, 52.92, 53.37, 54.18, 55.29, 55.62, 55.99, 56.69, 57.31]
# test large obj AP: [19.4, 24.05, 27.0, 31.5, 33.65, 34.56, 37.13, 38.45, 42.83, 42.31, 47.66, 49.24, 48.61, 54.06, 53.98, 55.72, 59.1, 60.61, 62.79, 64.74, 66.44, 67.3, 69.83, 70.34, 71.27]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# large margin +1 testset AP across scale: 
# test small obj AP: [21.21, 26.29, 29.85, 33.38, 34.26, 35.77, 36.85, 36.82, 37.89, 38.21, 39.39, 38.71, 39.83, 40.16, 40.71, 41.39, 41.76, 40.12, 42.18, 42.99, 40.12, 41.25, 40.07]
# test midle obj AP: [41.88, 49.63, 54.07, 56.95, 58.72, 60.17, 61.40, 62.36, 62.99, 63.41, 64.53, 64.88, 65.12, 65.09, 65.70, 65.93, 65.90, 66.96, 67.29, 67.01, 67.22, 66.87, 66.98]
# test large obj AP: [60.86, 69.23, 73.36, 76.12, 78.40, 79.46, 80.74, 81.17, 81.84, 82.32, 82.59, 83.08, 83.42, 83.72, 84.12, 84.29, 84.63, 84.81, 84.97, 85.14, 85.20, 85.26, 85.41]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Scale Balance Loss testset AP across scale: 
# test small obj AP: [22.07, 30.23, 33.11, 34.08, 38.87, 37.87, 38.38, 40.38, 41.29, 41.84, 43.97, 42.28, 42.7, 42.57, 43.87, 43.85, 44.69, 43.73, 43.9, 43.98, 42.67, 43.51, 43.02, 43.02, 42.83]
# test midle obj AP: [41.76, 49.73, 53.68, 57.22, 59.99, 60.97, 61.54, 62.53, 63.62, 64.34, 65.14, 65.37, 65.7, 66.25, 66.13, 66.06, 67.33, 67.04, 67.02, 66.8, 67.36, 66.89, 66.63, 66.79, 66.93]
# test large obj AP: [60.91, 69.68, 74.25, 76.83, 78.78, 79.59, 80.28, 81.14, 81.98, 82.4, 82.75, 83.51, 83.78, 83.92, 84.17, 84.4, 84.72, 84.97, 84.91, 85.25, 85.45, 85.22, 85.25, 85.33, 85.67]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin S=-1, M&L=-0.5 testset AP across scale: 
# test small obj AP: [22.29, 27.59, 30.32, 35.62, 36.02, 34.88, 35.60, 37.85, 38.23, 37.18, 40.41, 39.30, 40.96, 40.66, 41.68, 42.65, 41.24, 39.87, 42.67, 41.57, 40.81, 41.13, 40.42, 37.80, 40.30]
# test midle obj AP: [41.72, 49.20, 53.24, 56.72, 59.27, 59.94, 61.07, 61.93, 62.67, 64.01, 64.73, 64.58, 65.26, 65.19, 66.00, 66.46, 67.02, 67.27, 67.25, 66.56, 67.35, 67.42, 66.97, 67.08, 66.73]
# test large obj AP: [60.99, 69.55, 73.20, 76.40, 78.34, 79.29, 79.96, 80.81, 81.73, 82.39, 82.75, 83.40, 83.79, 83.93, 84.01, 84.53, 84.67, 84.83, 85.03, 85.36, 85.33, 85.45, 85.37, 85.29, 85.54]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin S=-1 testset AP across scale: 
# test small obj AP: [21.96, 28.37, 30.40, 33.19, 34.64, 36.97, 37.62, 38.20, 38.84, 39.27, 40.55, 40.13, 41.60, 40.77, 41.44, 42.52, 42.27, 41.72, 39.72, 42.59, 43.10, 42.82, 42.89, 42.52, 40.25]
# test midle obj AP: [42.42, 50.14, 54.11, 56.99, 59.50, 60.97, 62.19, 63.22, 64.34, 64.80, 65.10, 66.31, 66.96, 67.06, 67.09, 67.27, 67.88, 68.01, 67.79, 68.20, 67.97, 67.45, 67.96, 67.25, 67.65]
# test large obj AP: [62.72, 69.65, 73.52, 76.24, 78.06, 79.61, 80.44, 81.33, 81.88, 82.42, 82.88, 83.25, 83.79, 83.90, 84.08, 84.44, 84.69, 84.96, 85.08, 85.16, 85.45, 85.29, 85.45, 85.36, 85.88]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Margin S=-2 testset AP across scale: 
# test small obj AP: [20.90, 29.18, 31.52, 34.54, 35.83, 37.39, 38.20, 37.56, 37.87, 40.14, 38.58, 40.86, 39.98, 41.33, 42.48, 41.91, 42.25, 42.17, 41.77, 41.43, 41.31, 42.02, 39.78, 39.43, 40.57]
# test midle obj AP: [41.40, 50.26, 54.37, 57.22, 59.42, 60.85, 61.88, 62.97, 63.44, 64.46, 65.07, 65.17, 65.75, 66.40, 66.77, 66.95, 67.55, 67.68, 67.95, 67.58, 67.79, 67.73, 67.40, 67.54, 66.80]
# test large obj AP: [61.31, 69.66, 73.77, 76.32, 78.49, 79.58, 80.16, 81.29, 81.80, 82.44, 82.86, 83.52, 83.68, 84.01, 84.16, 84.29, 84.56, 84.90, 84.88, 85.22, 85.08, 85.11, 85.13, 85.18, 85.82]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
